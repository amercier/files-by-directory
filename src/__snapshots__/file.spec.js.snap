// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`File followSymbolicLink() resolves to a new File instance when file links to a directory 1`] = `
File {
  "isDirectory": true,
  "isSymbolicLink": false,
  "path": "fixture/level1/level2/link-to-sibling-directory",
}
`;

exports[`File followSymbolicLink() resolves to a new File instance when file links to a file 1`] = `
File {
  "isDirectory": false,
  "isSymbolicLink": false,
  "path": "fixture/level1/level2/link-to-sibling-file",
}
`;

exports[`File getChildren() generates asynchronously one File instance per child when file is a directory 1`] = `
Array [
  File {
    "isDirectory": false,
    "isSymbolicLink": false,
    "path": "fixture/level1/file1a",
  },
  File {
    "isDirectory": false,
    "isSymbolicLink": false,
    "path": "fixture/level1/file1b",
  },
  File {
    "isDirectory": true,
    "isSymbolicLink": false,
    "path": "fixture/level1/level2",
  },
  File {
    "isDirectory": undefined,
    "isSymbolicLink": true,
    "path": "fixture/level1/link-to-current-directory",
  },
  File {
    "isDirectory": undefined,
    "isSymbolicLink": true,
    "path": "fixture/level1/link-to-descendant-directory",
  },
  File {
    "isDirectory": undefined,
    "isSymbolicLink": true,
    "path": "fixture/level1/link-to-descendant-file",
  },
  File {
    "isDirectory": undefined,
    "isSymbolicLink": true,
    "path": "fixture/level1/link-to-grand-parent-directory",
  },
  File {
    "isDirectory": undefined,
    "isSymbolicLink": true,
    "path": "fixture/level1/link-to-parent-directory",
  },
  File {
    "isDirectory": undefined,
    "isSymbolicLink": true,
    "path": "fixture/level1/link-to-unexisting-file",
  },
]
`;

exports[`File getChildren() generates asynchronously one File instance per child when file is a directory 2`] = `
Array [
  File {
    "isDirectory": false,
    "isSymbolicLink": false,
    "path": "fixture/level1/level2/file2a",
  },
  File {
    "isDirectory": false,
    "isSymbolicLink": false,
    "path": "fixture/level1/level2/file2b",
  },
  File {
    "isDirectory": true,
    "isSymbolicLink": false,
    "path": "fixture/level1/level2/level3",
  },
  File {
    "isDirectory": undefined,
    "isSymbolicLink": true,
    "path": "fixture/level1/level2/link-to-sibling-directory",
  },
  File {
    "isDirectory": undefined,
    "isSymbolicLink": true,
    "path": "fixture/level1/level2/link-to-sibling-file",
  },
]
`;

exports[`File getChildren() generates asynchronously one File instance per child when file is a directory 3`] = `
Array [
  File {
    "isDirectory": false,
    "isSymbolicLink": false,
    "path": "fixture/level1/level2/level3/file3a",
  },
  File {
    "isDirectory": false,
    "isSymbolicLink": false,
    "path": "fixture/level1/level2/level3/file3b",
  },
]
`;

exports[`File static fromPath() resolves with an instance of File when file is a directory 1`] = `
File {
  "isDirectory": true,
  "isSymbolicLink": false,
  "path": "fixture/level1/level2",
}
`;

exports[`File static fromPath() resolves with an instance of File when file is a file 1`] = `
File {
  "isDirectory": false,
  "isSymbolicLink": false,
  "path": "fixture/level1/file1a",
}
`;

exports[`File static fromPath() resolves with and instance of File when symlink links to a directory 1`] = `
File {
  "isDirectory": undefined,
  "isSymbolicLink": true,
  "path": "fixture/level1/level2/link-to-sibling-directory",
}
`;

exports[`File static fromPath() resolves with and instance of File when symlink links to a file 1`] = `
File {
  "isDirectory": undefined,
  "isSymbolicLink": true,
  "path": "fixture/level1/level2/link-to-sibling-file",
}
`;

exports[`File static fromPath() resolves with and instance of File when symlink links to non-existing file 1`] = `
File {
  "isDirectory": undefined,
  "isSymbolicLink": true,
  "path": "fixture/level1/link-to-unexisting-file",
}
`;

exports[`File static fromPaths() generates instances of File asynchronously 1`] = `
File {
  "isDirectory": false,
  "isSymbolicLink": false,
  "path": "fixture/level1/file1a",
}
`;

exports[`File static fromPaths() generates instances of File asynchronously 2`] = `
File {
  "isDirectory": true,
  "isSymbolicLink": false,
  "path": "fixture/level1/level2",
}
`;

exports[`File static fromPaths() generates instances of File asynchronously 3`] = `
File {
  "isDirectory": undefined,
  "isSymbolicLink": true,
  "path": "fixture/level1/level2/link-to-sibling-file",
}
`;

exports[`File static fromPaths() generates instances of File asynchronously 4`] = `
File {
  "isDirectory": undefined,
  "isSymbolicLink": true,
  "path": "fixture/level1/level2/link-to-sibling-directory",
}
`;

exports[`File static fromPaths() generates instances of File asynchronously 5`] = `
File {
  "isDirectory": undefined,
  "isSymbolicLink": true,
  "path": "fixture/level1/link-to-unexisting-file",
}
`;

exports[`File static readDir() generates asynchronously one File instance per child when path is a directory 1`] = `
Array [
  File {
    "isDirectory": false,
    "isSymbolicLink": false,
    "path": "fixture/level1/level2/level3/file3a",
  },
  File {
    "isDirectory": false,
    "isSymbolicLink": false,
    "path": "fixture/level1/level2/level3/file3b",
  },
]
`;

exports[`File static readDir() generates asynchronously one File instance per child when path is a directory 2`] = `
Array [
  File {
    "isDirectory": false,
    "isSymbolicLink": false,
    "path": "fixture/level1/level2/file2a",
  },
  File {
    "isDirectory": false,
    "isSymbolicLink": false,
    "path": "fixture/level1/level2/file2b",
  },
  File {
    "isDirectory": true,
    "isSymbolicLink": false,
    "path": "fixture/level1/level2/level3",
  },
  File {
    "isDirectory": undefined,
    "isSymbolicLink": true,
    "path": "fixture/level1/level2/link-to-sibling-directory",
  },
  File {
    "isDirectory": undefined,
    "isSymbolicLink": true,
    "path": "fixture/level1/level2/link-to-sibling-file",
  },
]
`;

exports[`File static readDir() generates asynchronously one File instance per child when path is a directory 3`] = `
Array [
  File {
    "isDirectory": false,
    "isSymbolicLink": false,
    "path": "fixture/level1/file1a",
  },
  File {
    "isDirectory": false,
    "isSymbolicLink": false,
    "path": "fixture/level1/file1b",
  },
  File {
    "isDirectory": true,
    "isSymbolicLink": false,
    "path": "fixture/level1/level2",
  },
  File {
    "isDirectory": undefined,
    "isSymbolicLink": true,
    "path": "fixture/level1/link-to-current-directory",
  },
  File {
    "isDirectory": undefined,
    "isSymbolicLink": true,
    "path": "fixture/level1/link-to-descendant-directory",
  },
  File {
    "isDirectory": undefined,
    "isSymbolicLink": true,
    "path": "fixture/level1/link-to-descendant-file",
  },
  File {
    "isDirectory": undefined,
    "isSymbolicLink": true,
    "path": "fixture/level1/link-to-grand-parent-directory",
  },
  File {
    "isDirectory": undefined,
    "isSymbolicLink": true,
    "path": "fixture/level1/link-to-parent-directory",
  },
  File {
    "isDirectory": undefined,
    "isSymbolicLink": true,
    "path": "fixture/level1/link-to-unexisting-file",
  },
]
`;

exports[`File static readDir() generates asynchronously one File instance per child when path links to a directory 1`] = `
Array [
  File {
    "isDirectory": false,
    "isSymbolicLink": false,
    "path": "fixture/level1/level2/link-to-sibling-directory/file3a",
  },
  File {
    "isDirectory": false,
    "isSymbolicLink": false,
    "path": "fixture/level1/level2/link-to-sibling-directory/file3b",
  },
]
`;
